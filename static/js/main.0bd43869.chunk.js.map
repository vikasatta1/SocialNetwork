{"version":3,"sources":["images/user.png","Redux/dialogs-reducer.ts","components/Users/Users.module.css","api/api.ts","components/Navbar/Navbar.module.css","components/common/FormsControl/FormControls.module.css","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","utils/object-helpers.ts","Redux/users-reducer.ts","components/common/Padinator/Paginator.tsx","components/Users/User.tsx","components/Users/Users.tsx","Redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","Redux/auth-reducer.ts","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","Redux/app-reducer.ts","hoc/withSuspense.tsx","App.tsx","reportWebVitals.ts","Redux/sidebar-reducer.ts","Redux/reduxe-store.ts","index.tsx","components/common/FormsControl/FormsControl.tsx","utils/validators/validators.ts","images/loading_one_icon_155179.svg","components/common/Preloader/Preloader.tsx","components/common/Padinator/Paginator.module.css","components/Header/Header.module.css","Redux/profile-reducer.ts"],"names":["Send","initialState","messages","id","message","dialogs","name","newMessageBody","sendMessageCreator","type","dialogsReducer","state","action","body","length","module","exports","instance","axios","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","post","unfollow","delete","getProfile","userId","profileAPI","getStatus","updateStatus","status","put","authAPI","me","login","email","password","rememberMe","logout","Navbar","className","s","nav","item","to","activeClassName","activeLink","News","Music","Settings","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unFollowSuccess","toggleIsFetching","toggleFollowingProgressAC","followUnfollowflow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Paginator","onPageChanged","x","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","styles","paginator","onClick","p","selectedPage","pageNumber","e","User","props","user","src","photos","small","userPhoto","disabled","some","unFollow","Users","getIsFetching","usersPage","createSelector","setPageSize","getTotalUsersCount","getCurrentPage","getFollowingInProgress","UsersContainer","this","Preloader","React","Component","compose","connect","console","log","bind","page","totalCount","Header","header","loginBlock","isAuth","logoutThunkCreator","setAuthUserData","getAuthUserDataThunkCreator","authReducer","HeaderContainer","withUrlDataContainerComponent","withRouter","auth","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Input","validate","required","error","formSummaryError","loginThunkCreator","stopSubmit","_error","formData","initialized","appReducer","withSuspense","Suspense","fallback","DialogsContainer","lazy","SuspendedProfile","SuspendedDialogs","App","initializeApp","path","render","app","promise","Promise","all","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","sidebarReducer","rootReducer","combineReducers","profilePage","profileReducer","dialogsPage","sidebar","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById","input","meta","hasError","touched","formControl","TextArea","value","maxLengthCreator","maxLength","preloader","profile","posts","likesCount","newPostText","addPostActionCreator","setStatusAC","getUserProfileThunkCreator","getStatusThunk","newPost","Date","getTime","postId"],"mappings":"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","file":"static/js/main.0bd43869.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/user.aa43b272.png\";","\r\n\r\nconst Send = \"SEND_MESSAGE\"\r\nexport type SendMessageType = {\r\n    type: \"SEND_MESSAGE\",\r\n    newMessageBody:string\r\n}\r\nconst initialState = {\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"How are you\"},\r\n        {id: 3, message: \"How are you\"},\r\n        {id: 4, message: \"Yo\"},\r\n        {id: 5, message: \"Yo\"},\r\n    ],\r\n    dialogs: [\r\n        {id: 1, name: \"Рик Санчез\"},\r\n        {id: 2, name: \"Морти Смит\"},\r\n        {id: 3, name: \"Бет Смит\"},\r\n        {id: 4, name: \"Джери Смит\"},\r\n        {id: 5, name: \"Натан\"},\r\n        {id: 6, name: \"Огурчик Рик\"},\r\n    ],\r\n    newMessageBody: \"\"\r\n}\r\ntype MessagesType = {\r\n    id: number\r\n    message: string\r\n}\r\ntype DialogsType = {\r\n    id: number\r\n    name: string\r\n}\r\nexport type dialogPageType = {\r\n    messages: Array<MessagesType>\r\n    dialogs: Array<DialogsType>\r\n    newMessageBody: string\r\n}\r\n\r\nexport type DialogsActionType = SendMessageType\r\n\r\nconst dialogsReducer = (state = initialState, action: SendMessageType): dialogPageType => {\r\n    switch (action.type) {\r\n        case Send:{\r\n                const body = action.newMessageBody;\r\n                return {\r\n                    ...state,\r\n                    messages: [...state.messages, {id: state.messages.length, message: body}]\r\n                };\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody:string): SendMessageType => {\r\n    return {type: \"SEND_MESSAGE\",newMessageBody}\r\n}\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__mnaQY\",\"selectedPage\":\"Users_selectedPage__21c2C\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        'API-KEY': 'dff2b0dc-55bd-439a-8c96-6ab659f7b37e'\r\n    }\r\n})\r\nexport const usersAPI = {\r\n    getUsers(currentPage: number, pageSize: number) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(id: number) {\r\n        return instance.post(`follow/${id}`)\r\n    },\r\n    unfollow(id: number) {\r\n        return instance.delete(`follow/${id}`)\r\n    },\r\n    getProfile(userId: number) {\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId: number) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId: number) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status: string) {\r\n        return instance.put(`profile/status`, {\r\n            status\r\n        })\r\n    }\r\n}\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`);\r\n    },\r\n    login(email:string,password:string, rememberMe = false)   {\r\n        return instance.post(`auth/login`, {email,password, rememberMe});\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1aLXf\",\"item\":\"Navbar_item__2--jH\",\"activeLink\":\"Navbar_activeLink__5wu8V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2StLV\",\"error\":\"FormControls_error__LY_0Y\",\"formSummaryError\":\"FormControls_formSummaryError__1Mfyo\"};","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Navbar.module.css';\n\nconst Navbar = () => {\n    return (<nav className={s.nav}>\n            <div className={s.item}>\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\n            </div>\n            <div className={s.item }>\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}> Message</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/news\" activeClassName={s.activeLink}> News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"/music\" activeClassName={s.activeLink}>Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to=\"settings\" activeClassName={s.activeLink}>Settings</NavLink>\n            </div>\n        </nav>\n\n    );\n}\nexport default Navbar;","import React from 'react';\nimport s from 'News.module.css'\n\nconst News = () => {\n    return (\n        <div>\n            News\n        </div>\n\n    );\n}\nexport default News;","import React from 'react';\nimport s from './Music.module.css.module.css'\n\n\nconst Music = () => {\n    return (\n        <div>\n            Music\n        </div>\n\n    );\n}\nexport default Music;","import React from 'react';\nimport s from 'Settings.module.css'\n\nconst Settings = () => {\n    return (\n        <div>\n            Settings\n        </div>\n\n    );\n}\nexport default Settings;","export const updateObjectInArray = (items: any, itemId: any, objPropName: any, newObjProps: any) => {\r\n    return items.map((u: any) => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {AppActionsType} from \"./reduxe-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nexport type UsersACType =\r\n    FollowType\r\n    | UnFollowType\r\n    | SetUsersType\r\n    | SetCurrentPageType\r\n    | SetTotalUsersCountType\r\n    | ToggleIsFetching\r\n    | FollowingProgress\r\n\r\ntype FollowType = {\r\n    type: \"FOLLOW\"\r\n    userId: number\r\n};\r\ntype UnFollowType = {\r\n    type: \"UNFOLLOW\"\r\n    userId: number\r\n};\r\ntype SetUsersType = {\r\n    type: \"SET_USERS\"\r\n    users: Array<UserType>\r\n};\r\ntype SetCurrentPageType = {\r\n    type: \"SET_CURRENT_PAGE\"\r\n    currentPage: number\r\n};\r\ntype SetTotalUsersCountType = {\r\n    type: \"SET_TOTAL_USERS_COUNT\"\r\n    count: number\r\n};\r\ntype ToggleIsFetching = {\r\n    type: \"TOGGLE_IS_FETCHING\"\r\n    isFetching: boolean\r\n}\r\ntype FollowingProgress = {\r\n    type: \"TOGGLE_IS_FOLLOWING_PROGRESS\"\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    photos: PhotosType\r\n    status: string\r\n    followed: boolean\r\n};\r\nexport type PhotosType = {\r\n    small: null | string\r\n    large: null | string\r\n};\r\n\r\nexport type progressFollowing = {\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\r\n\r\nconst initialState = {\r\n    users:  [] as Array<UserType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>\r\n};\r\n\r\nexport type InitialState = typeof initialState\r\nexport const usersReducer = (state = initialState, action: AppActionsType): InitialState => {\r\n    switch (action.type) {\r\n        case  FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users,action.userId,\"id\",{followed: true})\r\n            }\r\n        case  UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users:updateObjectInArray(state.users,action.userId,\"id\",{followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n};\r\n\r\nexport const followSuccess = (userId: number): FollowType => {\r\n    return {type: FOLLOW, userId}\r\n};\r\nexport const unFollowSuccess = (userId: number): UnFollowType => {\r\n    return {type: UNFOLLOW, userId}\r\n};\r\nexport const setUsers = (users: Array<UserType>) => ({type: SET_USERS, users});\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage: currentPage});\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetching => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const toggleFollowingProgressAC = (isFetching: boolean, userId: number): FollowingProgress => ({\r\n    type: \"TOGGLE_IS_FOLLOWING_PROGRESS\", isFetching, userId\r\n});\r\nexport const requestUsers = (page: number, pageSize: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        dispatch(toggleIsFetching(true))\r\n        dispatch(setCurrentPage(page))\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false))\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount));\r\n    }\r\n}\r\n\r\nconst followUnfollowflow = async (dispatch: Dispatch, id: number,apiMethod:any,actionCreator:any) => {\r\n    dispatch(toggleFollowingProgressAC(true, id));\r\n    let response = await apiMethod(id)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(toggleFollowingProgressAC(false, id))\r\n}\r\n\r\nexport const follow = (id: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        let apiMethod = usersAPI.follow.bind(usersAPI)\r\n        let actionCreator = followSuccess;\r\n        followUnfollowflow(dispatch,id,apiMethod,actionCreator)\r\n    }\r\n}\r\n\r\nexport const unFollow = (id: number) => {\r\n    return async (dispatch: Dispatch) => {\r\n        let apiMethod = usersAPI.unfollow.bind(usersAPI)\r\n        let actionCreator = unFollowSuccess;\r\n        followUnfollowflow(dispatch,id,apiMethod,actionCreator)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from 'classnames'\r\n\r\ntype PropsType = {\r\n    totalUsersCount: number\r\n    pageSize: number\r\n    currentPage?: number\r\n    onPageChanged?: (pageNumber: number) => void\r\n    portionSize?: number\r\n}\r\n\r\nlet Paginator: React.FC<PropsType> = ({totalUsersCount, pageSize,\r\n                                          currentPage = 1,\r\n                                          onPageChanged = x => x,\r\n                                          portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages: Array<number> = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n        {pages\r\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n            .map((p) => {\r\n                return <span className={ cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../images/user.png\";\r\nimport styles from \"./Users.module.css\";\r\nimport {UserType} from \"../../Redux/users-reducer\";\r\nexport type UserPropsType = {\r\n    user:UserType\r\n    followingInProgress: []\r\n    follow:(id: number)=> void\r\n    unFollow:(id: number)=> void\r\n}\r\nconst User = (props:UserPropsType) => {\r\n    return (\r\n        <div>\r\n            <span>\r\n                <div>\r\n                    <NavLink to={\"/profile/\" + props.user.id}>\r\n                                <img src={props.user.photos.small ? props.user.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div>\r\n                                {props.user.followed\r\n\r\n                                    ? <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                                              onClick={() => {\r\n                                                  props.unFollow(props.user.id)\r\n                                              }\r\n                                              }>Unfollow</button>\r\n\r\n                                    : <button disabled={props.followingInProgress.some(id => id === props.user.id)}\r\n                                              onClick={() => {\r\n                                                  props.follow(props.user.id)\r\n                                              }\r\n                                              }>Follow</button>}\r\n                            </div>\r\n                        </span>\r\n            <span>\r\n                            <span>\r\n                                <div>{props.user.name}</div><div>{props.user.status}</div>\r\n                            </span>\r\n                            <span>\r\n                                <div>{\"props.user.location.country\"}</div>\r\n                                <div>{\"props.user.location.city\"}</div>\r\n                            </span>\r\n                        </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default User;","import React from \"react\";\r\nimport {UserType} from \"../../Redux/users-reducer\";\r\nimport Paginator from \"../common/Padinator/Paginator\";\r\nimport User from \"./User\";\r\n\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    onPageChanged: (pageNumber: number) => void\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    followingInProgress: []\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n}\r\n\r\n\r\nconst Users = (props: UsersPropsType) => {\r\n    return (\r\n        <div>\r\n            <Paginator pageSize={props.pageSize}\r\n                       totalUsersCount={props.totalUsersCount}\r\n                       onPageChanged={props.onPageChanged}\r\n                       currentPage={props.currentPage}/>\r\n            {props.users.map(u =>\r\n                <User key={u.id}\r\n                      user={u}\r\n                      unFollow={props.unFollow}\r\n                      follow={props.follow}\r\n                      followingInProgress={props.followingInProgress}\r\n                />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Users;\r\n","import {AppStateType} from \"./reduxe-store\";\r\nimport {createSelector} from \"reselect\";\r\ntype Selector<S> = (state: AppStateType) => S;\r\n\r\n const getUsersSelector = (state:AppStateType) => {\r\n    return state.usersPage.users\r\n}\r\n\r\n\r\nexport const getIsFetching = (state:AppStateType) => {\r\n    return   state.usersPage.isFetching\r\n}\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users,) => {\r\n\r\n    return  users.filter(u => true);\r\n})\r\n\r\n\r\n\r\n\r\n\r\nexport const setPageSize = (state:AppStateType) => {\r\nreturn  state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state:AppStateType) => {\r\nreturn   state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state:AppStateType) => {\r\nreturn   state.usersPage.currentPage\r\n}\r\n\r\nexport const getFollowingInProgress = (state:AppStateType) => {\r\nreturn   state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../Redux/reduxe-store\";\r\nimport {follow, requestUsers, unFollow, unFollowSuccess, UsersACType, UserType,} from \"../../Redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    setPageSize,\r\n} from \"../../Redux/users-selectors\";\r\nimport {ProfileActionsType} from \"../../Redux/profile-reducer\";\r\nimport {DialogsActionType} from \"../../Redux/dialogs-reducer\";\r\n\r\n\r\ntype mapStatePropsType = {\r\n    users: Array<UserType>,\r\n    pageSize: number,\r\n    totalUsersCount: number,\r\n    currentPage: number,\r\n    isFetching: boolean,\r\n    followingInProgress: any,\r\n}\r\n\r\ntype mapDispatchToProps = {\r\n    unFollowSuccess: (userId: number) => void\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n\r\n}\r\ntype UsersPropsType = {\r\n    users: Array<UserType>\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    pageSize: number\r\n    isFetching: boolean\r\n    followingInProgress: []\r\n    getUsers: (currentPage: number, pageSize: number) => void\r\n    follow: (id: number) => void\r\n    unFollow: (id: number) => void\r\n}\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType, AppActionsType> {\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (pageNumber: number) => {\r\n        this.props.getUsers(pageNumber, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ?\r\n                <Preloader/> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                users={this.props.users}\r\n                followingInProgress={this.props.followingInProgress}\r\n                follow={this.props.follow}\r\n                unFollow={this.props.unFollow}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nconst mapStateProps = (state: AppStateType): mapStatePropsType => {\r\n    console.log(\"map Users\")\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: setPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\nexport default compose(\r\n    connect<mapStatePropsType, mapDispatchToProps, {}, AppStateType>\r\n    (mapStateProps, {follow, unFollow, unFollowSuccess, getUsers: requestUsers}))(UsersContainer)\r\ntype AppActionsType = ProfileActionsType | DialogsActionType | UsersACType","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from './Header.module.css';\nimport {HeaderPropsType} from \"./HeaderContainer\";\n\n\nconst Header = (props: HeaderPropsType) => {\n    return (\n        <header className={s.header}>\n            <img src={'https://cs8.pikabu.ru/post_img/2016/02/12/5/og_og_14552628492629745.jpg'}/>\n            <div className={s.loginBlock}>\n                {props.isAuth\n                    ? <div>{props.login} - <button onClick={props.logoutThunkCreator}>Logout</button></div>\n                    : <NavLink to={'/login'}>Login</NavLink>}\n\n            </div>\n        </header>\n    );\n}\nexport default Header;","import {AppActionsType} from \"./reduxe-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nexport type authAT = setUserDataAT\r\ntype setUserDataAT = {\r\n    type: \"SET_USER_DATA\",\r\n    data: {\r\n        userId: number | null,\r\n        email: string,\r\n        login: string,\r\n        isAuth: boolean\r\n    }\r\n\r\n}\r\nconst initialState = {\r\n    userId: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false\r\n}\r\ntype initAuthStateType = typeof initialState\r\n\r\nconst authReducer = (state = initialState , action: AppActionsType): initAuthStateType => {\r\n    switch (action.type) {\r\n        case \"SET_USER_DATA\":\r\n            return {\r\n                ...state,\r\n                //...action.data,\r\n                userId: action.data.userId,\r\n                email: action.data.email,\r\n                login: action.data.login,\r\n                isAuth: action.data.isAuth\r\n            }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (userId: number | null, email: string, login: string, isAuth: boolean): setUserDataAT => ({\r\n    type: \"SET_USER_DATA\",\r\n    data: {\r\n        userId, email, login,isAuth\r\n    }\r\n})\r\n\r\nexport const getAuthUserDataThunkCreator = ( ) => async (dispatch:Dispatch) => {\r\n    let response = await  authAPI.me();\r\n            if (response.data.resultCode === 0) {\r\n                let {id, email, login} = response.data.data;\r\n               dispatch(setAuthUserData(id, email, login, true));\r\n            }\r\n}\r\n\r\nexport const loginThunkCreator = (email:string,password:string, rememberMe:boolean ) => async (dispatch:Dispatch) => {\r\n    let response = await authAPI.login(email,password,rememberMe)\r\n            if (response.data.resultCode === 0) {\r\n                // @ts-ignore\r\n                dispatch(getAuthUserDataThunkCreator())\r\n            } else {\r\n               let messages = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n                dispatch(stopSubmit(\"login\", {_error:messages}))\r\n            }\r\n}\r\nexport const logoutThunkCreator = () => async (dispatch:any) => {\r\n    let response = await  authAPI.logout()\r\n            if (response.data.resultCode === 0) {\r\n                // @ts-ignore\r\n                dispatch(setAuthUserData(null,null,null,false))\r\n            }\r\n}\r\n\r\n\r\n\r\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\n\nimport { logoutThunkCreator} from \"../../Redux/auth-reducer\";\nimport {AppStateType} from \"../../Redux/reduxe-store\";\nimport {RouteComponentProps, withRouter} from \"react-router\";\n\n\ntype OwnProps = {}\ntype PathParamsType = {\n    id: number | null,\n    email: string | null,\n    login: string | null,\n    isAuth: false\n}\ntype mapStatePropsType = {\n    isAuth: boolean,\n    login: null | string\n}\ntype mapDispatchPropsType = {\n    logoutThunkCreator:()=>void\n}\nexport type HeaderPropsType = mapDispatchPropsType & mapStatePropsType\ntype OwnPropsType = mapStatePropsType & mapDispatchPropsType\n\n// @ts-ignore\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\n\nclass HeaderContainer extends React.Component<PropsType> {\n\n    render() {\n        return (\n            <Header {...this.props} isAuth={this.props.isAuth} login={this.props.login}/>\n        );\n    }\n}\n\nconst mapStateProps = (state: AppStateType): mapStatePropsType => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n\n})\nlet withUrlDataContainerComponent = withRouter(HeaderContainer)\nexport default connect<mapStatePropsType, mapDispatchPropsType, OwnProps, AppStateType>\n(mapStateProps, {logoutThunkCreator})(withUrlDataContainerComponent);\n","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Input} from \"../common/FormsControl/FormsControl\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginThunkCreator} from \"../../Redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../Redux/reduxe-store\";\r\nimport styles from \"../common/FormsControl/FormControls.module.css\"\r\n\r\ntype FormDataType = {\r\n    login: string\r\n    password: string\r\n    rememberMe: boolean\r\n    email: string\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder={'Email'}\r\n                    name={'email'}\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    placeholder={'Password'}\r\n                    name={'password'}\r\n                    type={'password'}\r\n                    component={Input}\r\n                    validate={[required]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Field\r\n                    component={Input}\r\n                    name={'rememberMe'}\r\n                    type={'checkbox'}\r\n                    validate={[required]}\r\n                /> remember me\r\n            </div>\r\n            {props.error && <div className={styles.formSummaryError}>\r\n                {props.error}\r\n            </div>}\r\n            <div>\r\n                <button>\r\n                    Login\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props: any) => {\r\n    const onSubmit = (formData: FormDataType) => {\r\n        props.loginThunkCreator(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'profile'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n};\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n        isAuth: state.auth.isAuth\r\n})\r\nexport default connect(mapStateToProps, {loginThunkCreator})(Login);","import {AppActionsType} from \"./reduxe-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {getAuthUserDataThunkCreator} from \"./auth-reducer\";\r\n\r\ntype setInitializedSuccess = {\r\n    type: \"SET_INITIALIZED_SUCCESS\"\r\n}\r\nconst initialState = {\r\n    initialized: false\r\n}\r\ntype AppStateType = typeof initialState\r\nexport type AppActionType = setInitializedSuccess\r\n\r\n\r\nconst appReducer = (state = initialState, action: AppActionsType): AppStateType => {\r\n    switch (action.type) {\r\n        case \"SET_INITIALIZED_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const setInitializedSuccess = ():setInitializedSuccess => ({\r\n    type: \"SET_INITIALIZED_SUCCESS\",\r\n})\r\nexport const initializeApp = () => (dispatch:any) => {\r\n\r\n    let promise = dispatch(getAuthUserDataThunkCreator())\r\n    Promise.all([promise]).then(()=>{\r\n        dispatch(setInitializedSuccess());\r\n    });\r\n\r\n}\r\n\r\n\r\nexport default appReducer;","import React from \"react\"\r\n\r\nexport function withSuspense<WCP>(Component: React.ComponentType<WCP>) {\r\n    return (props: WCP) => {\r\n        return <React.Suspense fallback={<div>loading...</div>} >\r\n        <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n    }\r\n","import React from 'react';\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {Route,} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {RouteComponentProps, withRouter} from \"react-router\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"./Redux/reduxe-store\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./Redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileInfo/ProfileContainer'));\nconst SuspendedProfile = withSuspense(ProfileContainer)\nconst SuspendedDialogs = withSuspense(DialogsContainer)\n\ntype OwnProps = {}\ntype PathParamsType = {}\ntype mapStatePropsType = {\n    initialized: boolean\n}\ntype mapDispatchPropsType = {\n    initializeApp: () => void\n}\nexport type AppPropsType = mapDispatchPropsType & mapStatePropsType\ntype OwnPropsType = mapStatePropsType & mapDispatchPropsType\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\n\n//типизацию исправить\nclass App extends React.Component<any> {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized)\n            return <Preloader/>\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route path='/dialogs' render={() => <SuspendedDialogs/>}/>\n                    <Route path='/profile/:userId?' render={() => <SuspendedProfile/>}/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/users' render={() => <UsersContainer/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStateType): mapStatePropsType => ({\n    initialized: state.app.initialized\n});\n\nexport default compose<React.ComponentType>(\n    connect<mapStatePropsType, mapDispatchPropsType, OwnProps, AppStateType>\n    (mapStateToProps, {initializeApp}),\n    withRouter)(App)","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {}\r\n\r\nconst sidebarReducer = (state: any = initialState, action: any): any => {\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport profileReducer, {ProfileActionsType} from \"./profile-reducer\";\r\nimport dialogsReducer, {DialogsActionType} from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer, {UsersACType} from \"./users-reducer\";\r\nimport authReducer, {authAT} from \"./auth-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer, {AppActionType} from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app:appReducer\r\n});\r\n\r\nexport const store = createStore(rootReducer,applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport type AppActionsType = ProfileActionsType | DialogsActionType | UsersACType | authAT | AppActionType\r\n// @ts-ignore\r\nwindow.store = store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {store} from './Redux/reduxe-store'\nimport {Provider} from \"react-redux\";\n\n\n\n\n\nReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n            <App />\n            </Provider>\n        </BrowserRouter>, document.getElementById('root')\n    );\n reportWebVitals();\n","import React, {ReactElement} from 'react';\r\nimport styles from './FormControls.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../utils/validators/validators\";\r\n\r\n\r\n const FormControl = ({input,meta, child,...props}:any) => {\r\n     const hasError = meta.touched && meta.error;\r\n     return (\r\n         <div className={styles.formControl + \" \" + ( hasError ? styles.error : '')}>\r\n             <div>\r\n                 {props.child}\r\n             </div>\r\n             {hasError && <span>{meta.error}</span>}\r\n         </div>\r\n\r\n     )\r\n}\r\n\r\n\r\n const TextArea = ({input,meta,...props}:any) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n       <div className={styles.formControl + \" \" + ( hasError ? styles.error : '')}>\r\n           <div>\r\n           <textarea {...input} {...props}/>\r\n           </div>\r\n           {hasError && <span>{meta.error}</span>}\r\n       </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport const Input = ({input,meta,...props}:any) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + ( hasError ? styles.error : '')}>\r\n            <div>\r\n                <input {...input} {...props}/>\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\nexport default TextArea;","import react from 'react'\r\n\r\nexport const required = (value: string) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLength30 = (value: string) => {\r\n    if (value.length>30) return 'Max length is 30 symbols';\r\n        return undefined;\r\n}\r\nexport const maxLengthCreator = (maxLength:number) => (value: string) =>  {\r\n    if (value.length>maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading_one_icon_155179.a84f887c.svg\";","import React from \"react\";\r\nimport preloader from \"../../../images/loading_one_icon_155179.svg\";\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            <img src={preloader}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3Gxiy\",\"pageNumber\":\"Paginator_pageNumber__WfFMd\",\"selectedPage\":\"Paginator_selectedPage__2_02U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1t5dY\",\"loginBlock\":\"Header_loginBlock__EMQu7\"};","import {AppActionsType} from \"./reduxe-store\";\r\nimport {Dispatch} from \"redux\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stat} from \"fs\";\r\n\r\n\r\nconst initialState = {\r\n    profile: null,\r\n    posts: [\r\n        {id: 1, message: \"Hi, how are you?\", likesCount: 12},\r\n        {id: 2, message: \"it's my first post\", likesCount: 11},\r\n    ],\r\n    newPostText: '',\r\n    status: \"\"\r\n}\r\nconst profileReducer = (state: profilePageType = initialState, action: AppActionsType): profilePageType => {\r\n    switch (action.type) {\r\n        case \"ADD-POST\": {\r\n            const newPost: PostsType = {\r\n                id: new Date().getTime(),\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case \"SET_USER_PROFILE\":\r\n            return {\r\n                ...state,\r\n                profile: action.user\r\n            }\r\n        case \"SET_STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case \"DELETE_POST\":\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id != action.postId)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText: string): AddPostActionType => {          //возвращает action\r\n    return {type: \"ADD-POST\", newPostText}\r\n}\r\nexport const setUserProfileAC = (user: ProfileType): SetUserProfileType => ({type: \"SET_USER_PROFILE\", user})\r\nexport const setStatusAC = (status: string): SetStatus => ({type: \"SET_STATUS\", status})\r\nexport const deletePost = (postId: number) => ({type: \"DELETE_POST\", postId} as const)\r\nexport const getUserProfileThunkCreator = (userId: any) => (dispatch: Dispatch) => {\r\n    usersAPI.getProfile(userId)\r\n        .then(response => {\r\n            dispatch(setUserProfileAC(response.data));\r\n        })\r\n}\r\nexport const getStatusThunk = (userId: any) => async (dispatch: Dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatusAC(response.data))\r\n}\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch) => {\r\n    let response = await   profileAPI.updateStatus(status)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setStatusAC(status))\r\n            }\r\n}\r\nexport type AddPostActionType = {\r\n    type: \"ADD-POST\",\r\n    newPostText: string\r\n}\r\nexport type ChangeNewPostTextActionType = {\r\n    type: \"UPDATE-NEW-POST-TEXT\",\r\n    newPostText: string\r\n}\r\nexport type SetUserProfileType = {\r\n    type: \"SET_USER_PROFILE\"\r\n    user: ProfileType\r\n}\r\nexport type SetStatus = {\r\n    type: \"SET_STATUS\"\r\n    status: string\r\n}\r\n\r\n\r\nexport type PostsType = {\r\n    id: number\r\n    message: string\r\n    likesCount: number\r\n}\r\nexport type profilePageType = {\r\n    profile: ProfileType | null\r\n    posts: Array<PostsType>\r\n    status: string\r\n    newPostText: string | null\r\n}\r\n\r\ntype contactType = {\r\n    facebook: string,\r\n    website: string,\r\n    vk: string,\r\n    twitter: string,\r\n    instagram: string,\r\n    youtube: string,\r\n    github: string,\r\n    mainLink: string\r\n}\r\n\r\ntype photoType = {\r\n    small: string | null,\r\n    large: string | null,\r\n}\r\nexport type ProfileType = {\r\n    aboutMe: string,\r\n    contacts: contactType\r\n    lookingForAJob: boolean,\r\n    lookingForAJobDescription: string,\r\n    fullName: string,\r\n    userId: number | null,\r\n    photos: photoType\r\n}\r\nexport type ProfileActionsType =\r\n    AddPostActionType\r\n    | ChangeNewPostTextActionType\r\n    | SetUserProfileType\r\n    | SetStatus\r\n    | DeletePostType\r\ntype DeletePostType = ReturnType<typeof deletePost>\r\n\r\nexport default profileReducer;"],"sourceRoot":""}